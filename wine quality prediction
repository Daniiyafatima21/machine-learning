# Import necessary libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Load wine quality dataset (you can use a real dataset for this)
# For simplicity, let's create a synthetic dataset
data = {
    'fixed_acidity': [7.4, 7.8, 7.8, 11.2, 7.4],
    'volatile_acidity': [0.7, 0.88, 0.76, 0.28, 0.7],
    'citric_acid': [0, 0.04, 0.56, 0.56, 0],
    'alcohol': [9, 9.5, 9.2, 9.6, 9.5],
    'quality': [5, 5, 6, 7, 5]
}

# Create a DataFrame
df = pd.DataFrame(data)

# Split the data into features (X) and target (y)
X = df[['fixed_acidity', 'volatile_acidity', 'citric_acid', 'alcohol']]
y = df['quality']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a Linear Regression model
model = LinearRegression()

# Train the model
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Calculate Mean Squared Error
mse = mean_squared_error(y_test, y_pred)
print("Mean Squared Error:", mse)

# Visualize the predicted vs. actual values
plt.scatter(y_test, y_pred)
plt.xlabel('Actual Quality')
plt.ylabel('Predicted Quality')
plt.title('Wine Quality Prediction using Linear Regression')
plt.show()
